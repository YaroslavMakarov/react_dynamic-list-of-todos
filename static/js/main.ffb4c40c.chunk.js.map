{"version":3,"sources":["TodosList.tsx","utils/helpers.ts","API.ts","App.tsx","index.tsx"],"names":["TodosList","props","todos","className","map","todo","key","id","user","name","title","ClassNames","todo__done","completed","ensure","argument","message","undefined","TypeError","users","fetch","then","response","json","data","todosFromServer","Promise","all","result","find","userId","App","useState","setTodos","isLoading","setLoading","isFormBeginningAlphabetName","setUpAlphabetName","isFormBeginningAlphabetTitle","setUpAlphabetTitle","isCompletedTodo","setIsCompletedTodo","length","type","onClick","newTodos","sort","a","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffb4c40c.chunk.js","sourcesContent":["import React from 'react';\nimport ClassNames from 'classnames';\nimport './todo.css';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nconst TodosList: React.FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <div className=\"todo\">\n      {todos.map(todo => (\n        <div key={todo.id} className=\"todo__wrapper\">\n          <p className=\"todo__body\">\n            <span className=\"todo__user\">\n              <strong>\n                {todo.user.name}\n              </strong>\n            </span>\n            :\n            {' '}\n            {todo.title}\n          </p>\n          <div className={ClassNames('todo__process', {\n            todo__done: todo.completed,\n          })}\n          >\n            Completed:\n            {' '}\n            {todo.completed ? 'Done' : 'In the process'}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TodosList;\n","export function ensure<T>(\n  argument: T | undefined | null,\n  message = 'This value was promised to be there.'\n): T {\n  if (argument === undefined || argument === null) {\n    throw new TypeError(message);\n  }\n\n  return argument;\n}\n","import { ensure } from './utils/helpers';\n\nconst USERS_API = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_API = 'https://jsonplaceholder.typicode.com/todos';\n\nconst users = fetch(USERS_API)\n  .then((response): Promise<User[]> => response.json()\n    .then(data => {\n      return data;\n    }));\nconst todos = fetch(TODOS_API)\n  .then((response): Promise<Todo[]> => response.json()\n    .then(data => {\n      return data;\n    }));\n\nexport const todosFromServer = Promise.all<User[], Todo[]>([users, todos])\n  .then(result => {\n    return result[1].map((todo: Todo) => (\n      {\n        ...todo,\n        user: ensure(result[0].find((user: User) => (\n          user.id === todo.userId\n        ))),\n      }\n    ));\n  });\n","import React, { useState } from 'react';\nimport TodosList from './TodosList';\nimport './App.css';\nimport { todosFromServer } from './API';\n\nconst App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isFormBeginningAlphabetName, setUpAlphabetName] = useState<boolean>(false);\n  const [isFormBeginningAlphabetTitle, setUpAlphabetTitle] = useState<boolean>(false);\n  const [isCompletedTodo, setIsCompletedTodo] = useState<boolean>(false)\n\n  const fetchData = (): void => {\n    setLoading(true);\n    todosFromServer.then(data => {\n      setLoading(false);\n\n      return setTodos(data);\n    });\n  };\n\n  const nameFilter = () => {\n    let newTodos = [];\n\n    if (!isFormBeginningAlphabetName) {\n      newTodos = [...todos].sort((a, b) => a.user.name.localeCompare(b.user.name));\n      setUpAlphabetName(true);\n\n      return setTodos(newTodos);\n    }\n\n    newTodos = [...todos].sort((a, b) => b.user.name.localeCompare(a.user.name));\n    setUpAlphabetName(false);\n\n    return setTodos(newTodos);\n  };\n\n  const titleFilter = () => {\n    let newTodos = [];\n\n    if (!isFormBeginningAlphabetTitle) {\n      newTodos = [...todos].sort((a, b) => a.title.localeCompare(b.title));\n      setUpAlphabetTitle(true);\n\n      return setTodos(newTodos);\n    }\n\n    newTodos = [...todos].sort((a, b) => b.title.localeCompare(a.title));\n    setUpAlphabetTitle(false);\n\n    return setTodos(newTodos);\n  };\n\n  const completedFilter = () => {\n    let newTodos = [];\n\n    if (!isCompletedTodo) {\n      newTodos = [...todos].sort((a, b) => Number(a.completed) - Number(b.completed));\n      setIsCompletedTodo(true);\n\n      return setTodos(newTodos);\n    }\n\n    newTodos = [...todos].sort((a, b) => Number(b.completed) - Number(a.completed));\n    setIsCompletedTodo(false);\n\n    return setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__header\">Dynamic list of TODOs</h1>\n      {todos.length > 0 && (\n        <div className=\"app__button-filter\">\n          <button\n            type=\"button\"\n            onClick={nameFilter}\n            className=\"app__button\"\n          >\n            Filter by name\n          </button>\n          <button\n            type=\"button\"\n            onClick={titleFilter}\n            className=\"app__button\"\n          >\n            Filter by title\n          </button>\n          <button\n            type=\"button\"\n            onClick={completedFilter}\n            className=\"app__button\"\n          >\n            Filter by complete\n          </button>\n        </div>\n      )}\n      <TodosList todos={todos} />\n      {todos.length === 0\n      && (\n        <button\n          type=\"button\"\n          onClick={fetchData}\n          className=\"app__button\"\n        >\n          {isLoading ? 'Loading...' : 'Get Todo'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}